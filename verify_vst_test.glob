DIGEST 847015e82e581441e826710989bcecfd
Fverify_vst_test
R15:28 Coq.Lists.List <> <> lib
R47:65 VST.floyd.proofauto <> <> lib
R84:91 vst_test <> <> lib
inst 127:135 <> CompSpecs
R139:147 VST.veric.compspecs <> compspecs class
R165:168 vst_test <> prog def
def 192:196 <> Vprog
R200:207 VST.veric.mpred <> varspecs def
R222:225 vst_test <> prog def
def 300:305 <> is_max
R311:314 Coq.Init.Datatypes <> list ind
R316:316 Coq.Numbers.BinNums <> Z ind
binder 308:308 <> l:1
R323:323 Coq.Numbers.BinNums <> Z ind
binder 320:320 <> m:2
R342:345 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R336:337 Coq.Lists.List <> In def
R341:341 verify_vst_test <> l:1 var
R339:339 verify_vst_test <> m:2 var
binder 353:353 <> x:3
R362:365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R356:357 Coq.Lists.List <> In def
R361:361 verify_vst_test <> l:1 var
R359:359 verify_vst_test <> x:3 var
R367:370 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R366:366 verify_vst_test <> x:3 var
R371:371 verify_vst_test <> m:2 var
def 435:447 <> find_max_spec
R456:458 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R451:455 compcert.common.AST <> ident def
R459:465 VST.veric.mpred <> funspec ind
R473:480 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R490:493 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R481:489 vst_test <> _find_max def
R494:498 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R500:501 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R505:506 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R509:510 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R516:517 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R526:527 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R534:535 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R540:541 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R543:552 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R562:563 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R568:575 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R814:824 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R829:836 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R553:556 compcert.export.Ctypesdefs <> tptr def
R558:561 compcert.export.Ctypesdefs <> tint def
R564:567 compcert.export.Ctypesdefs <> tint def
R825:828 compcert.export.Ctypesdefs <> tint def
R502:504 compcert.common.Values <> val ind
R511:515 VST.msl.shares <> share def
R528:531 Coq.Init.Datatypes <> list ind
R533:533 Coq.Numbers.BinNums <> Z ind
R542:542 Coq.Numbers.BinNums <> Z ind
binder 499:499 <> a:4
binder 507:508 <> sh:5
binder 518:525 <> contents:6
binder 536:539 <> size:7
R576:581 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R599:611 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R632:644 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R668:674 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R582:595 VST.veric.shares <> readable_share def
R597:598 verify_vst_test <> sh:5 var
R613:615 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R616:622 Coq.ZArith.Zcomplements <> Zlength def
R624:631 verify_vst_test <> contents:6 var
R649:651 Coq.Init.Logic <> ::type_scope:x_'='_x not
R645:648 verify_vst_test <> size:7 var
R652:658 Coq.ZArith.Zcomplements <> Zlength def
R660:667 verify_vst_test <> contents:6 var
R675:682 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R684:685 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R706:712 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R683:683 verify_vst_test <> a:4 var
R686:689 compcert.common.Values <> Vint constr
R692:699 compcert.lib.Integers Int repr def
R701:704 verify_vst_test <> size:7 var
R713:717 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R813:813 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R718:724 VST.floyd.field_at <> data_at def
R726:727 verify_vst_test <> sh:5 var
R730:735 compcert.export.Ctypesdefs <> tarray def
R737:740 compcert.export.Ctypesdefs <> tint def
R743:750 Coq.ZArith.BinInt Z to_nat def
R752:755 verify_vst_test <> size:7 var
R778:780 Coq.Lists.List <> map def
R788:790 Coq.Lists.List <> map def
R801:808 verify_vst_test <> contents:6 var
R792:799 compcert.lib.Integers Int repr def
R782:785 compcert.common.Values <> Vint constr
R812:812 verify_vst_test <> a:4 var
binder 499:499 <> a:8
binder 507:508 <> sh:9
binder 518:525 <> contents:10
binder 536:539 <> size:11
R837:839 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R846:852 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R845:845 Coq.Numbers.BinNums <> Z ind
binder 840:842 <> max:12
R853:858 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R878:884 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R859:864 verify_vst_test <> is_max def
R866:873 verify_vst_test <> contents:10 var
R875:877 verify_vst_test <> max:12 var
R885:892 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R912:918 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R893:896 compcert.common.Values <> Vint constr
R899:906 compcert.lib.Integers Int repr def
R908:910 verify_vst_test <> max:12 var
R919:923 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R1019:1019 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R924:930 VST.floyd.field_at <> data_at def
R932:933 verify_vst_test <> sh:9 var
R936:941 compcert.export.Ctypesdefs <> tarray def
R943:946 compcert.export.Ctypesdefs <> tint def
R949:956 Coq.ZArith.BinInt Z to_nat def
R958:961 verify_vst_test <> size:11 var
R984:986 Coq.Lists.List <> map def
R994:996 Coq.Lists.List <> map def
R1007:1014 verify_vst_test <> contents:10 var
R998:1005 compcert.lib.Integers Int repr def
R988:991 compcert.common.Values <> Vint constr
R1018:1018 verify_vst_test <> a:8 var
