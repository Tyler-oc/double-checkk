DIGEST 1c871c6a50ae533ecd4bb3da8f23cd8a
Fverify_vst_test
R15:33 VST.floyd.proofauto <> <> lib
R52:59 vst_test <> <> lib
inst 95:103 <> CompSpecs
R107:115 VST.veric.compspecs <> compspecs class
R133:136 vst_test <> prog def
def 160:164 <> Vprog
R168:175 VST.veric.mpred <> varspecs def
R190:193 vst_test <> prog def
def 283:297 <> is_greater_spec
R306:308 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R301:305 compcert.common.AST <> ident def
R309:315 VST.veric.mpred <> funspec ind
R323:330 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R342:345 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R331:341 vst_test <> _is_greater def
R346:350 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R352:353 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R355:356 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R358:359 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R361:370 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R375:376 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R381:448 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R519:529 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R534:541 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R371:374 compcert.export.Ctypesdefs <> tint def
R377:380 compcert.export.Ctypesdefs <> tint def
R530:533 compcert.export.Ctypesdefs <> tint def
R354:354 Coq.Numbers.BinNums <> Z ind
R360:360 Coq.Numbers.BinNums <> Z ind
binder 351:351 <> a:1
binder 357:357 <> b:2
R449:461 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R462:469 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R487:488 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R506:512 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R470:473 compcert.common.Values <> Vint constr
R476:483 compcert.lib.Integers Int repr def
R485:485 verify_vst_test <> a:1 var
R489:492 compcert.common.Values <> Vint constr
R495:502 compcert.lib.Integers Int repr def
R504:504 verify_vst_test <> b:2 var
R513:518 VST.floyd.canon <> ::assert4:'SEP'_'()' not
binder 351:351 <> a:3
binder 357:357 <> b:4
R542:554 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R555:562 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R607:613 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R563:566 compcert.common.Values <> Vint constr
R572:574 compcert.lib.Coqlib <> zlt def
R576:576 verify_vst_test <> b:4 var
R578:578 verify_vst_test <> a:3 var
R598:605 compcert.lib.Integers Int zero def
R585:591 compcert.lib.Integers Int one def
R614:619 VST.floyd.canon <> ::assert5:'SEP'_'()' not
def 636:640 <> Gprog
R644:651 VST.veric.mpred <> funspecs def
R656:657 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R673:674 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R658:672 verify_vst_test <> is_greater_spec def
prf 686:700 <> body_is_greater
R703:712 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R739:753 verify_vst_test <> is_greater_spec def
R726:737 vst_test <> f_is_greater def
R720:724 verify_vst_test <> Gprog def
R714:718 verify_vst_test <> Vprog def
